/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package filesstatistics;

import filesstatistics.charts.ChartFrame;
import filesstatistics.core.DataStructure;
import filesstatistics.core.PropertiesReader;
import filesstatistics.core.StatisticsReader;
import filesstatistics.core.StatisticsReaderImpl;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Rafal
 */
public class FilesStatisticsJFrame extends javax.swing.JFrame {
    
    private StatisticsReader statisticsReader = new StatisticsReaderImpl();
    private Properties applicationProperties;
    private DateFormat dateFormatter = new SimpleDateFormat("dd.MM.yyyy HH:mm");
    
    /*
     * {filename : { dataStructures : List<DataStructure>, A : 1, C : 234 ...} }
     */
    private Map<String, Map<String, Object>> stats;

    /**
     * Creates new form FilesStatisticsJFrame
     */
    public FilesStatisticsJFrame() throws IOException {
        initComponents();
        applicationProperties = PropertiesReader.readProperties();
        filesTablePostCreation(filesTable);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        filesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Files statistics");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        filesTable.setAutoCreateRowSorter(true);
        filesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File name", "Type", "Operation", "Count", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        filesTable.setEditingColumn(0);
        filesTable.setEditingRow(0);
        filesTable.getTableHeader().setReorderingAllowed(false);
        filesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(filesTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        try {
            Set<String> operations = StatisticsReader.OPERATIONS;
            stats = statisticsReader.readStatistics();
            DefaultTableModel model = (DefaultTableModel) filesTable.getModel();
            model.setRowCount(countRows(stats));
            int index = 0;
            for(String file : stats.keySet()) {
                Map<String, Object> descriptions = stats.get(file);
                List<DataStructure> dataStructures = (List<DataStructure>)descriptions.get(StatisticsReader.DATA_STRUCTURE_LIST_KEY);
                String fileType = (String)descriptions.get(StatisticsReader.FILE_TYPE_KEY);
                for(String op : operations) {
                    if(!descriptions.containsKey(op)) {
                        continue;
                    }
                    int count = (Integer)descriptions.get(op);
                    Date date = new Date(getLastModificationDateForOperation(op, dataStructures));
                    setInfoToTable(model, index, file, fileType, op, count, dateFormatter.format(date));
                    index++;
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(FilesStatisticsJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void filesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filesTableMouseClicked
        JTable target = (JTable)evt.getSource();
        int row = target.getSelectedRow();
        row = target.convertRowIndexToModel(row);
        DefaultTableModel model = (DefaultTableModel)target.getModel();
        String fileName = (String)model.getValueAt(row, 0);
        String operation = (String)model.getValueAt(row, 2);
        ChartFrame frame = new ChartFrame(fileName,operation,stats);
        frame.pack();
        frame.setVisible(true);
    }//GEN-LAST:event_filesTableMouseClicked

    private void setInfoToTable(TableModel model, int rowIndex, String fileName, String fileType, String operation, int count, String lastModification) {
        model.setValueAt(fileName, rowIndex, 0);
        model.setValueAt(fileType, rowIndex, 1);
        model.setValueAt(operation, rowIndex, 2);
        model.setValueAt(count, rowIndex, 3);
        model.setValueAt(lastModification, rowIndex, 4);
    }
    
    private int countRows(Map<String, Map<String, Object>> stats) {
        int count = 0;
        
        for(String file : stats.keySet()) {
            Map<String, Object> descriptions = stats.get(file);
            count += descriptions.keySet().size()-2; //count only operations (omit dataStructe list and file type infos)
        }
        return count;
    }
    
    private Long getLastModificationDateForOperation(String operation, List<DataStructure> dataStructures) {
        Long date = null;
        for(DataStructure ds : dataStructures) {
            if(!ds.getOperation().equals(operation)) {
                continue;
            }
            Long tmp = ds.getDate();
            if (date == null) {
                date = tmp;
            } else {
                if(date < tmp) {
                    date = tmp;
                }
            }
        }
        
        return date;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilesStatisticsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilesStatisticsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilesStatisticsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilesStatisticsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new FilesStatisticsJFrame().setVisible(true);    


                } catch (IOException ex) {
                    Logger.getLogger(FilesStatisticsJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable filesTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    // End of variables declaration//GEN-END:variables

    private JTable filesTablePostCreation(JTable table) {
        DefaultTableModel model = (DefaultTableModel) filesTable.getModel();
        String headers = applicationProperties.getProperty(PropertiesReader.HEADERS_LIST_KEY);
        String[] headersTab = headers.split(",");
        model.setColumnCount(headersTab.length);
        model.setColumnIdentifiers(headersTab);
        return table;
    }
    
    
}
